{"version":3,"sources":["config.js","Header.js","SearchForm.js","NavBar.js","Photo.js","PhotoResults.js","NotFound.js","App.js","index.js"],"names":["apiKey","Header","Container","fluid","className","SearchForm","state","queryString","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","props","searchFlickr","history","push","currentTarget","reset","this","match","location","Form","onSubmit","Row","Col","Control","type","name","onChange","placeholder","required","xs","Button","variant","React","Component","withRouter","NavBar","hotTags","length","tag1","_content","tag2","tag3","Nav","to","onClick","Photo","img","id","info","secret","server","farm","owner","title","href","src","alt","PhotoResults","flicks","photosArr","photos","console","log","map","key","loading","NotFound","App","tagLoading","query","axios","get","then","response","data","photo","catch","error","hottags","tag","Spinner","animation","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ebaf57e1.chunk.js","sourcesContent":["const apiKey= '8b789a6b58e15a4c6342c35500b436a0';\nexport default apiKey;\n//Secret:\n//05293b4a4feb9f50 ","import React from 'react';\nimport Container from 'react-bootstrap/Container'\n\nconst Header = () => {\n    return(\n    <Container fluid>\n    <h1 className=\"display-1 text-center headline\"> Flickr Gallery </h1>\n    </Container>\n    )\n}\n\nexport default Header","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Form, Button, Col } from 'react-bootstrap'\n\nclass SearchForm extends React.Component {\n  state = {\n    queryString: 'Search'\n  }\n  //updates state when anything is typed in serach form\n  onSearchChange = (e) => {\n    this.setState({queryString: e.target.value})\n  }\n  //prevents default, passes strng to search function, resets search bar\n  handleSubmit = (e) =>{\n    e.preventDefault();\n    this.props.searchFlickr(this.state.queryString);\n    this.props.history.push(`/search`)\n    e.currentTarget.reset();\n   }\n  \n  render() {\n    const { match, location, history } = this.props;\n    return (\n      //layout rendered with React-Bootstrap\n      <Container className=\"justify-content-md-center search-bar\">\n        <Form onSubmit={this.handleSubmit}>\n        <Form.Row>\n            <Col>\n            <Form.Control type=\"search\" \n                name=\"search\" \n                onChange={this.onSearchChange} \n                placeholder='Search' required/>\n            </Col>\n            <Col xs=\"auto\">\n                <Button variant=\"info\"\n                  type=\"submit\" \n                  className=\"search-button\"\n                  >\n                  Search\n                </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n    </Container>\n    )\n  }\n}\n//exports with router information like \"this.props.history\"\nexport default withRouter(SearchForm);\n\n\n// ------- FOR FUTURE CHANGES\n{/* <Link to={{\n  pathname: '/search',\n  search: `?q=${this.state.queryString}`\n}}\n> */}","import React from 'react';\nimport { Container, Nav, Row, Col } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\n\nconst NavBar = (props) => {\n  const hotTags = props.hotTags\n  if (hotTags.length > 0){\n    const tag1 = hotTags[0]._content\n    const tag2 = hotTags[1]._content\n    const tag3 = hotTags[2]._content\n    return(\n      <Container fluid>\n      <Row>\n      <Col xs=\"auto\"><h3 className='trending'>Trending Now:</h3></Col>\n      <Nav>\n        <Col xs=\"auto\"><NavLink to={`/trending/${tag1}`} onClick={()=> props.searchFlickr(tag1)}><h4>{tag1}</h4></NavLink></Col>\n        <Col xs=\"auto\"><NavLink to={`/trending/${tag2}`} onClick={()=> props.searchFlickr(tag2)}><h4>{tag2}</h4></NavLink></Col>\n        <Col xs=\"auto\"><NavLink to={`/trending/${tag3}`} onClick={()=> props.searchFlickr(tag3)}><h4>{tag3}</h4></NavLink></Col>\n      </Nav>\n      </Row>\n      </Container>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default NavBar;","import React from 'react';\n\nconst Photo = (props) => {\n    const img = {\n        id: props.info.id,\n        secret: props.info.secret,\n        server: props.info.server,\n        farm: props.info.farm,\n        owner: props.info.owner,\n        title: props.info.title\n    }\n    return(\n        <div className=\"photo-container\">\n            <a href={`https://www.flickr.com/photos/${img.owner}/${img.id}`}>\n            <img className=\"single-photo\" src={`https://farm${img.farm}.staticflickr.com/${img.server}/${img.id}_${img.secret}.jpg`} alt={img.title} />\n            </a>\n        </div>\n    )\n}\n\nexport default Photo;","import React from 'react';\nimport Photo from './Photo';\n\nconst PhotoResults = props => {\n    //creates array variable from props data\n    const photosArr = props.photos\n    console.log(photosArr, props.photos)\n    let flicks\n    //creates a variable storing React photo components \n    if (photosArr.length > 0) {\n        flicks = photosArr.map(info => <Photo info={info} key={info.id}/>)\n    } else if (props.loading === true) {\n        flicks = 'Loading...'\n    } else {\n        flicks = <div className=\"not-found\"><h3>Sorry, no results for your search term. </h3></div>\n    }\n    return(\n        <div className=\"gallery-display\">\n                {flicks}\n        </div>\n        )\n}\nexport default PhotoResults;\n\n","import React from 'react';\n\nconst NotFound = () => {\n    return(\n        <li className=\"not-found\" id=\"not-found\">\n        <h3>No Results Found</h3>\n        <p>Sorry, this page does not exist.</p>\n      </li>\n    )\n}\n\nexport default NotFound","import React from 'react';\nimport { BrowserRouter, Route, Switch, withRouter } from 'react-router-dom';\nimport Spinner from 'react-bootstrap/Spinner'\n\n//axios chosen for http requests somewhat arbitrarily so I could practice with it\n// but it is more backwards compatible than fetch(needs polyfill) and auto converts into JSON\nimport axios from 'axios';\n\n//Component and variable imports\nimport apiKey from './config.js';\nimport Header from './Header.js'\nimport SearchForm from './SearchForm';\nimport NavBar from './NavBar';\nimport PhotoResults from './PhotoResults';\nimport NotFound from './NotFound';\n\nclass App extends React.Component {\n    state = {\n        //array set to an empty array because if not, PhotoResults component will attempt to render\n        // and return an error when 'photos' is not an array\n        photos: [],\n        loading: true,\n        hotTags:[],\n        tagLoading: true,\n        query: 'random'\n        //loading true by default, changed to false in the when http request if fulfulled\n    }\n    \n    //calls random query of flickr when App begins\n    componentDidMount(){\n            axios.get(\n                `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${this.state.query}&per_page=24&format=json&nojsoncallback=1`)\n               .then(response => {\n                   this.setState({\n                       photos: response.data.photos.photo,\n                       loading: false\n                   })\n                  })\n                .catch(error => {\n                 console.log('Error fetching and parsing data', error);\n                });\n                axios.get(\n                   `https://www.flickr.com/services/rest/?method=flickr.tags.getHotList&api_key=${apiKey}&count=5&format=json&nojsoncallback=1`)\n                  .then(response => {\n                      this.setState({\n                          hotTags: response.data.hottags.tag,\n                          tagLoading: false,\n                      })\n                     })\n                   .catch(error => {\n                    console.log('Error fetching and parsing data', error);\n                   });\n    }\n\n    //search function. No default because form prevents empty submission\n    //when called in another function, passes state information back up to App\n    searchFlickr = (query = 'random') => {\n        axios.get(\n            `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`)\n           .then(response => {\n               this.setState({\n                   photos: response.data.photos.photo,\n                   loading: false\n               })\n               console.log('data fetched for', query)\n              })\n            .catch(error => {\n             console.log('Error fetching and parsing data', error);\n            });   \n    }\n    //if the loading state is true, displays text\n   loading(){\n    if (this.state.loading) {\n    return   <Spinner animation=\"border\" variant=\"warning\" />}\n   }\n    render(){\n        return (\n    <BrowserRouter>\n      <div className=\"app\">\n         <Header />\n        <br />\n          {/* Passes the search form to NavBar for routes and to the search component*/}\n          <div className=\"nav-area\">\n            <SearchForm searchFlickr={this.searchFlickr}/>\n            <NavBar searchFlickr={this.searchFlickr} hotTags={this.state.hotTags}/>\n          </div>\n        <div className=\"photo-container\">\n            {/* Returns a route and displays Cats/Dogs/Computers based on props passed to it. Clicking on buttons in NavBar starts search\n            props are passed into function and destructured as recommended on tutorial, faster that way*/}\n            {this.loading()}\n            <Switch>\n            <Route exact path='/' render=\n              {() => <PhotoResults photos={this.state.photos} loading={this.state.loading}/>}\n              />\n              <Route path='/search' render=\n                {(props) => <PhotoResults {...props} photos={this.state.photos} loading={this.state.loading}/>}\n                />\n            <Route path={`/trending/:trending`} render=\n                {(props) => <PhotoResults {...props} photos={this.state.photos} loading={this.state.loading}/>}\n                />\n            <Route component={() =>{\n                  if (this.state.loading === false) {\n                  return   <NotFound />}\n            }}/>\n            </Switch>\n            </div>\n      </div>\n    </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n\n//------FOR FUTURE CHANGES\n//     componentDidUpdate(prevProps, prevState){\n//     //when search route is called, use location.search to search API.\n//    //this method is used in case the user wants to share a link with a search\n//    // all other seraches are handled normally. \n//     if(prevProps.location.search !== this.props.location.search){\n//         const q = queryString.parse(this.props.location.search).q\n//         this.searchFlickr(q)\n//         console.log('searched for' + q)\n//         this.setState({\n//             query: q,\n//         })\n//         }\n//         console.log(this.state.query)\n//     }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}